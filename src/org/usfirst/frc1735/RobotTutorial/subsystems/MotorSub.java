// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1735.RobotTutorial.subsystems;

import org.usfirst.frc1735.RobotTutorial.RobotMap;
import org.usfirst.frc1735.RobotTutorial.commands.*;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Victor;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class MotorSub extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController motor = RobotMap.motorSubMotor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new MotorByJoystick());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    public void driveMotorWithJoystick(Joystick joyLeft, Joystick joyRight) {
    	// Extract the joystick values
    	double joyLeftX, joyLeftY, joyRightX, joyRightY;
    	
    	// If an Xbox controller, try using the two sticks on controller 1 (Right side) instead of using two joysticks
    	if (joyRight.getIsXbox()) {
    		joyLeftX = joyRight.getRawAxis(0);  // Left stick X
    		joyLeftY = joyRight.getRawAxis(1);  // Left stick Y
    		joyRightX = joyRight.getRawAxis(4); // Right stick X
    		joyRightY = joyRight.getRawAxis(5); // Right stick Y
    	}
    	else {
    		joyLeftX  = joyLeft.getX();
    		joyLeftY  = joyLeft.getY();
    		joyRightX = joyRight.getX();
    		joyRightY = joyRight.getY();
    	}
    	
    	motor.set(joyLeftX); // Right = positive; Left = negative
    }
	
}

